[{"/Users/ism/Documents/Web_Development/playlist/src/reportWebVitals.js":"1","/Users/ism/Documents/Web_Development/playlist/src/dropzone/DropZone.js":"2","/Users/ism/Documents/Web_Development/playlist/src/dropzone/config.js":"3","/Users/ism/Documents/Web_Development/playlist/src/App.js":"4","/Users/ism/Documents/Web_Development/playlist/src/playlistLinks/PlaylistLinks.js":"5","/Users/ism/Documents/Web_Development/playlist/src/index.js":"6","/Users/ism/Documents/Web_Development/playlist/src/folderPage/FolderPage.js":"7"},{"size":362,"mtime":1606878668409,"results":"8","hashOfConfig":"9"},{"size":11440,"mtime":1608757562626,"results":"10","hashOfConfig":"9"},{"size":381,"mtime":1607842265657,"results":"11","hashOfConfig":"9"},{"size":1123,"mtime":1608756908369,"results":"12","hashOfConfig":"9"},{"size":1562,"mtime":1608088327233,"results":"13","hashOfConfig":"9"},{"size":500,"mtime":1606878668409,"results":"14","hashOfConfig":"9"},{"size":3939,"mtime":1618419388367,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"14uu7so",{"filePath":"19","messages":"20","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/ism/Documents/Web_Development/playlist/src/reportWebVitals.js",[],["34","35"],"/Users/ism/Documents/Web_Development/playlist/src/dropzone/DropZone.js",["36","37","38","39","40","41","42"],"import React, { useState, useEffect, useRef } from 'react';\nimport './DropZone.css';\nimport firebase from \"firebase/app\";\nimport storage from \"firebase/storage\";\nimport  firebaseConfig from \"./config\";\nimport FolderPage from \"../folderPage/FolderPage\";\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    useRouteMatch,\n    BrowserRouter\n  } from \"react-router-dom\";\n\n// firebase.initializeApp(firebaseConfig);\n\nif (!firebase.apps.length) {\n    firebase.initializeApp(firebaseConfig);\n\n }else {\n    firebase.app(); // if already initialized, use that one\n }\n\nlet fb_storage = firebase.storage();\nlet storageRef = fb_storage.ref();  \nlet rootRef = storageRef.root;\n\n\n\nconst DropZone = () => {\n\n\n    let playlistName = '';    \n\n    const [validFiles, setValidFiles] = useState([]);    \n    const [selectedFiles, setSelectedFiles] = useState([]);\n    const [errorMessage, setErrorMessage] = useState(''); \n    const [unsupportedFiles, setUnsupportedFiles] = useState([]);\n    const fileInputRef = useRef();\n\n    const [folders, setFolders] = useState([]);   \n\n    const displayLinks = () =>{\n        rootRef.listAll().then(function(res) {\n            let temp = [];\n            res.prefixes.forEach(function(folderRef) {\n                // console.log(folderRef.name)\n                temp.push(folderRef.name)\n                \n                // All the prefixes under listRef.\n                // You may call listAll() recursively on them.\n            });\n            setFolders(temp);\n            res.items.forEach(function(itemRef) {\n                // All the items under listRef.\n                // console.log(itemRef.name);\n            });\n            }).catch(function(error) {\n            // Uh-oh, an error occurred!\n            }); \n    }\n\n\n    useEffect(()=>{\n        displayLinks();\n    },[])\n\n    useEffect(() => {\n        let filteredArray = selectedFiles.reduce((file, current) => {\n            const x = file.find(item => item.name === current.name);\n            if (!x) {\n                return file.concat([current]);\n            } else {\n                return file;\n            }\n        }, []);\n        setValidFiles([...filteredArray]);\n\n    }, [selectedFiles]);\n\n    const dragOver = (e) => {\n        e.preventDefault();\n        }\n        \n        const dragEnter = (e) => {\n        e.preventDefault();\n        }\n        \n        const dragLeave = (e) => {\n        e.preventDefault();\n        }\n        \n        const fileDrop = (e) => {\n            e.preventDefault();\n            const files = e.dataTransfer.files;\n            console.log(files);\n            if (files.length) {\n                handleFiles(files);\n            }\n        }\n\n \n      \n    const handleFiles = (files) => {\n        for(let i = 0; i < files.length; i++) {\n            if (validateFile(files[i])) {\n                // add to an array so we can display the name of file\n                setSelectedFiles(prevArray => [...prevArray, files[i]]);\n            } else {\n                // add a new property called invalid\n                files[i]['invalid'] = true;\n                // add to the same array so we can display the name of the file\n                setSelectedFiles(prevArray => [...prevArray, files[i]]);\n                // set error message\n                setErrorMessage('File type not permitted');\n\n                setUnsupportedFiles(prevArray => [...prevArray, files[i]]);\n            }\n        }\n    }\n      \n    const validateFile = (file) => {\n        const validTypes = ['audio/mpeg', 'audio/wav', 'audio/aiff'];\n        if (validTypes.indexOf(file.type) === -1) {\n            return false;\n        }\n        return true;\n    }\n    \n    const fileSize = (size) => {\n        if (size === 0) return '0 Bytes';\n        const k = 1024;\n        const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n        const i = Math.floor(Math.log(size) / Math.log(k));\n        return parseFloat((size / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n    }\n    \n    const fileType = (fileName) => {\n        return fileName.substring(fileName.lastIndexOf('.') + 1, fileName.length) || fileName;\n    }\n\n    const removeFile = (name) => {\n        // find the index of the item\n        // remove the item from array\n        const validFileIndex = validFiles.findIndex(e => e.name === name);\n\n        validFiles.splice(validFileIndex, 1);\n        // update valid files array\n        setValidFiles([...validFiles]);\n        const selectedFileIndex = selectedFiles.findIndex(e => e.name === name);\n        selectedFiles.splice(selectedFileIndex, 1);\n        // update selectedFiles array\n        setSelectedFiles([...selectedFiles]);\n\n        const unsupportedFileIndex = unsupportedFiles.findIndex(e => e.name === name);\n\n        if(unsupportedFileIndex !== -1){\n            unsupportedFiles.splice(unsupportedFileIndex, 1);\n            setUnsupportedFiles([...unsupportedFiles]);\n        }\n\n    }\n\n  \n   \n    const fileInputClicked = () => {\n        fileInputRef.current.click();\n    }\n\n    const filesSelected = () => {\n        if (fileInputRef.current.files.length) {\n            handleFiles(fileInputRef.current.files);\n        }\n    }\n\n    const uploadModalRef = useRef();\n    const uploadRef = useRef();\n    const progressRef = useRef();\n\n    const closeUploadModal = () => {\n        uploadModalRef.current.style.display = 'none';\n    }\n\n    const uploadFiles = () => {\n        uploadModalRef.current.style.display = 'block';\n        uploadRef.current.innerHTML = 'File(s) Uploading...';\n\n       \n        playlistName = document.getElementById('playlistName').value;\n        console.log(playlistName);\n        for (let i = 0; i < validFiles.length; i++) {\n            \n            var audioRef = storageRef.child(playlistName + '/' + validFiles[i]['name']);\n\n            let audioFile = validFiles[i];\n            var uploadTask = audioRef.put(audioFile);\n\n            \n        }\n\n        uploadTask.on('state_changed', function(snapshot){\n            var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n            document.querySelector('.progress-bar').style.width = progress + '%';\n            console.log('Upload is ' + progress + '% done');\n            \n            }, function(error){\n                alert('oops error uploading. try again');\n            }, function(){\n                // handle successful upload\n                document.querySelector('.upload-modal').style.display = 'none';\n                document.getElementById('playlistName').value = '';\n                setValidFiles([]);\n                setSelectedFiles([])\n                displayLinks();\n                    \n\n            }\n\n        )\n\n       \n    }\n\n    const removeFolder = (folderName) => {\n        console.log(folderName);\n\n        // let storageRef = fb_storage.ref();  \n        // let rootRef = storageRef.root;\n        // console.log(firebase.storage());\n\n\n        let ref = firebase.storage().ref(folderName);\n        ref.listAll().then(dir => {\n          dir.items.forEach(fileRef => {\n            var dirRef = firebase.storage().ref(fileRef.fullPath);\n            dirRef.getDownloadURL().then(function(url) {\n              var fileRef = firebase.storage().refFromURL(url);\n              fileRef.delete().then(function() {\n                // File deleted successfully \n                displayLinks();\n              }).catch(function(error) {\n                // There has been an error      \n              });\n            });\n          });\n        }).catch(error => {\n          console.log(error);\n        });\n\n\n\n        // var folderRef = storageRef.child(folderName);\n\n        // // Delete the file\n        // folderRef.delete().then(function() {\n        //     // File deleted successfully\n        //     // redownload the current folders\n        //     displayLinks();\n        // }).catch(function(error) {\n        //     // Uh-oh, an error occurred!\n        // });       \n        \n    }\n\n   \n\n    // const Links = () => {\n    //   return (\n    //       <>  \n    //         {folders.map((folder, index) => {\n    //             return (\n    //                 <div className=\"audioLinks\" key={index}>\n    //                     <Link to={folder}> {folder} <span className=\"delete-btn\" onClick={ () => removeFolder(folder)}>x</span></Link>\n    //                 </div>\n    //             ) \n    //         })}\n    //       </>  \n    //     )  \n    // }\n\n   \n    return (\n     <>\n\n     {/* <Router>\n        <Route path=\"/\" component={Links}/>\n        <Route path=\"/:folder\" component={FolderPage}/>\n     </Router>  */}\n\n     {folders.map((folder, index) => {\n                return (\n                    <div className=\"audioLinks\" key={index}>\n                        <Link to={`/user/${folder}`}> {folder} </Link>\n                        <span className=\"delete-btn\" onClick={ () => removeFolder(folder)}>x</span>\n                    </div>\n                ) \n        })}   \n\n     {/* <div className=\"audioLinks\">\n        {folders.map((folder, index) => {\n            return <a key={index} href={folder} > {folder} <span className=\"delete-btn\" onClick={ () => removeFolder(folder)}>x</span></a>\n        })}\n    </div> */}\n    <div className=\"container\">\n        <input id=\"playlistName\" placeholder=\"Enter Playlist Name\" type=\"text\"/>\n        {unsupportedFiles.length === 0 && validFiles.length ? <button className=\"file-upload-btn\" onClick={() => uploadFiles()}>Upload Files</button> : ''} \n{unsupportedFiles.length ? <p>Please remove all unsupported files.</p> : ''}\n        <div className=\"drop-container\" \n            onDragOver={dragOver}\n            onDragEnter={dragEnter}\n            onDragLeave={dragLeave}\n            onDrop={fileDrop}\n            onClick={fileInputClicked}\n        >\n        \n        <div className=\"drop-message\">\n            <input\n            ref={fileInputRef}\n            className=\"file-input\"\n            type=\"file\"\n            multiple\n            onChange={filesSelected}\n            />\n\n            <div className=\"upload-icon\"></div>\n            Drag & Drop files here or click to upload\n        </div>            \n        </div>\n        <div className=\"file-display-container\">\n            {\n            validFiles.map((data, i) => \n                <div className=\"file-status-bar\" key={i}>\n                    <div>\n                        <div className=\"file-type-logo\">logo</div>\n                        <div className=\"file-type\">{fileType(data.name)}</div>\n                        <span className={`file-name ${data.invalid ? 'file-error' : ''}`}>{data.name}</span>\n                        <span className=\"file-size\">({fileSize(data.size)})</span> {data.invalid && <span className='file-error-message'>({errorMessage})</span>}\n                    </div>\n                    <div className=\"file-remove\" onClick={() => removeFile(data.name)}>X</div>\n                </div>\n            )\n            }\n        </div>\n        \n    </div>\n\n    <div className=\"upload-modal\" ref={uploadModalRef}>\n            <div className=\"overlay\"></div>\n            <div className=\"close\" onClick={(() => closeUploadModal())}>X</div>\n            <div className=\"progress-container\">\n            <span ref={uploadRef}></span>\n            <div className=\"progress\">\n            <div className=\"progress-bar\" ref={progressRef}></div>\n            </div>\n            </div>\n        </div>\n    </>\n    )\n}\nexport default DropZone;\n\n// https://www.youtube.com/watch?v=8r1Pb6Ja90o","/Users/ism/Documents/Web_Development/playlist/src/dropzone/config.js",[],"/Users/ism/Documents/Web_Development/playlist/src/App.js",["43","44","45","46","47"],"/Users/ism/Documents/Web_Development/playlist/src/playlistLinks/PlaylistLinks.js",["48","49"],"import React, { useState, useEffect, useRef } from 'react';\nimport firebase from \"firebase/app\";\nimport storage from \"firebase/storage\";\nimport  firebaseConfig from \"../dropzone/config\";\n\n\n\nif (!firebase.apps.length) {\n    firebase.initializeApp(firebaseConfig);\n\n }else {\n    firebase.app(); // if already initialized, use that one\n }\n\nlet fb_storage = firebase.storage();\nlet storageRef = fb_storage.ref();  \n\nlet rootRef = storageRef.root;\n\n// let folders = [];\n\n\nconst PlayListLinks = () =>{\n\n    const [folders, setFolders] = useState([]);    \n\n\n    const displayLinks = () =>{\n        rootRef.listAll().then(function(res) {\n            let temp = [];\n            res.prefixes.forEach(function(folderRef) {\n                // console.log(folderRef.name)\n                temp.push(folderRef.name)\n                \n                // All the prefixes under listRef.\n                // You may call listAll() recursively on them.\n            });\n            setFolders(temp);\n            res.items.forEach(function(itemRef) {\n                // All the items under listRef.\n                // console.log(itemRef.name);\n            });\n            }).catch(function(error) {\n            // Uh-oh, an error occurred!\n            }); \n    }\n\n\n    useEffect(()=>{\n        displayLinks();\n    },[])\n   \n// console.log(folders);\n\n    return(\n        <>\n            <ul>\n                {folders.map((folder, index) => {\n                    return <li key={index}> {folder}</li>\n                })}\n            </ul>\n        </>\n    )\n}\n\nexport default PlayListLinks",["50","51"],"/Users/ism/Documents/Web_Development/playlist/src/index.js",[],"/Users/ism/Documents/Web_Development/playlist/src/folderPage/FolderPage.js",["52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67"],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":4,"column":8,"nodeType":"74","messageId":"75","endLine":4,"endColumn":15},{"ruleId":"72","severity":1,"message":"76","line":6,"column":8,"nodeType":"74","messageId":"75","endLine":6,"endColumn":18},{"ruleId":"72","severity":1,"message":"77","line":9,"column":22,"nodeType":"74","messageId":"75","endLine":9,"endColumn":28},{"ruleId":"72","severity":1,"message":"78","line":10,"column":5,"nodeType":"74","messageId":"75","endLine":10,"endColumn":11},{"ruleId":"72","severity":1,"message":"79","line":11,"column":5,"nodeType":"74","messageId":"75","endLine":11,"endColumn":10},{"ruleId":"72","severity":1,"message":"80","line":13,"column":5,"nodeType":"74","messageId":"75","endLine":13,"endColumn":18},{"ruleId":"72","severity":1,"message":"81","line":14,"column":5,"nodeType":"74","messageId":"75","endLine":14,"endColumn":18},{"ruleId":"72","severity":1,"message":"82","line":1,"column":8,"nodeType":"74","messageId":"75","endLine":1,"endColumn":12},{"ruleId":"72","severity":1,"message":"83","line":5,"column":8,"nodeType":"74","messageId":"75","endLine":5,"endColumn":21},{"ruleId":"72","severity":1,"message":"84","line":10,"column":3,"nodeType":"74","messageId":"75","endLine":10,"endColumn":7},{"ruleId":"72","severity":1,"message":"80","line":11,"column":3,"nodeType":"74","messageId":"75","endLine":11,"endColumn":16},{"ruleId":"72","severity":1,"message":"81","line":12,"column":3,"nodeType":"74","messageId":"75","endLine":12,"endColumn":16},{"ruleId":"72","severity":1,"message":"85","line":1,"column":38,"nodeType":"74","messageId":"75","endLine":1,"endColumn":44},{"ruleId":"72","severity":1,"message":"73","line":3,"column":8,"nodeType":"74","messageId":"75","endLine":3,"endColumn":15},{"ruleId":"68","replacedBy":"86"},{"ruleId":"70","replacedBy":"87"},{"ruleId":"72","severity":1,"message":"85","line":1,"column":38,"nodeType":"74","messageId":"75","endLine":1,"endColumn":44},{"ruleId":"72","severity":1,"message":"73","line":3,"column":8,"nodeType":"74","messageId":"75","endLine":3,"endColumn":15},{"ruleId":"72","severity":1,"message":"77","line":7,"column":22,"nodeType":"74","messageId":"75","endLine":7,"endColumn":28},{"ruleId":"72","severity":1,"message":"78","line":8,"column":5,"nodeType":"74","messageId":"75","endLine":8,"endColumn":11},{"ruleId":"72","severity":1,"message":"79","line":9,"column":5,"nodeType":"74","messageId":"75","endLine":9,"endColumn":10},{"ruleId":"72","severity":1,"message":"84","line":10,"column":5,"nodeType":"74","messageId":"75","endLine":10,"endColumn":9},{"ruleId":"72","severity":1,"message":"80","line":11,"column":5,"nodeType":"74","messageId":"75","endLine":11,"endColumn":18},{"ruleId":"72","severity":1,"message":"81","line":12,"column":5,"nodeType":"74","messageId":"75","endLine":12,"endColumn":18},{"ruleId":"72","severity":1,"message":"88","line":15,"column":10,"nodeType":"74","messageId":"75","endLine":15,"endColumn":19},{"ruleId":"72","severity":1,"message":"89","line":42,"column":12,"nodeType":"74","messageId":"75","endLine":42,"endColumn":17},{"ruleId":"72","severity":1,"message":"90","line":42,"column":19,"nodeType":"74","messageId":"75","endLine":42,"endColumn":27},{"ruleId":"72","severity":1,"message":"91","line":43,"column":12,"nodeType":"74","messageId":"75","endLine":43,"endColumn":16},{"ruleId":"72","severity":1,"message":"92","line":43,"column":18,"nodeType":"74","messageId":"75","endLine":43,"endColumn":25},{"ruleId":"72","severity":1,"message":"93","line":52,"column":13,"nodeType":"74","messageId":"75","endLine":52,"endColumn":17},{"ruleId":"94","severity":1,"message":"95","line":72,"column":44,"nodeType":"96","messageId":"97","endLine":72,"endColumn":46},{"ruleId":"98","severity":1,"message":"99","line":89,"column":7,"nodeType":"100","endLine":89,"endColumn":9,"suggestions":"101"},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"no-unused-vars","'storage' is defined but never used.","Identifier","unusedVar","'FolderPage' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'useRouteMatch' is defined but never used.","'BrowserRouter' is defined but never used.","'logo' is defined but never used.","'PlayListLinks' is defined but never used.","'Link' is defined but never used.","'useRef' is defined but never used.",["102"],["103"],"'isElement' is defined but never used.","'files' is assigned a value but never used.","'setFiles' is assigned a value but never used.","'urls' is assigned a value but never used.","'setUrls' is assigned a value but never used.","'temp' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fileNames'. Either include it or remove the dependency array.","ArrayExpression",["104"],"no-global-assign","no-unsafe-negation",{"desc":"105","fix":"106"},"Update the dependencies array to be: [fileNames]",{"range":"107","text":"108"},[2189,2191],"[fileNames]"]